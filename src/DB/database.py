from sqlalchemy.ext.asyncio import create_async_engine, AsyncSession, async_sessionmaker

from src.DB.config import db_config
from src.DB.models import Model

# –°–æ–∑–¥–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π engine
engine = create_async_engine(
    db_config.DATABASE_URL,
    echo=db_config.DB_ECHO,
    pool_size=20,
    max_overflow=10,
    pool_timeout=30,
    pool_recycle=1800,
)

# –°–æ–∑–¥–∞–µ–º —Ñ–∞–±—Ä–∏–∫—É —Å–µ—Å—Å–∏–π
SessionFactory = async_sessionmaker(
    engine,
    class_=AsyncSession,
    expire_on_commit=False,
    autoflush=False,
    autocommit=False
)

async def get_db() -> AsyncSession:
    """
    Dependency –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏ –ë–î
    """
    async with SessionFactory() as session:
        try:
            yield session
        finally:
            await session.close()

async def create_tables():
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
    """
    async with engine.begin() as conn:
        await conn.run_sync(Model.metadata.create_all, checkfirst=True)
    print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")

async def delete_tables():
    """
    –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Å—Ç–æ–≤!)
    """
    async with engine.begin() as conn:
        await conn.run_sync(Model.metadata.drop_all)
    print("üóëÔ∏è –¢–∞–±–ª–∏—Ü—ã —É–¥–∞–ª–µ–Ω—ã")